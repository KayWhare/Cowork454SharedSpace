@*
    For more information on enabling MVC for empty projects, visit http://go.microsoft.com/fwlink/?LinkID=397860
*@
<div id="Bookings" class="tabcontent">
    <div class="row">
        <div class="col s12">
            <h3>CoWork Bookings</h3>
            <p>....</p>
        </div>
    </div>
    <div class="row">
        <div class="col s12">
            <h4>Bookings</h4>
            <table class="striped" id="Bookings-table">
                <thead>
                    <tr>
                        <th>Order Id</th>
                        <th>Product Id</th>
                        <th>Date_start</th>
                        <th>Date_end</th>
                        <th></th>
                        <th></th>

                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
    </div>
    <div class="row">
        <h4>Add Spaces</h4>
        <form class="col s12">
            <div class="row">
                <div class="input-field col s6">
                    <input placeholder="OrderID" name="OrderID" id="OrderID" type="text">
                </div>
                <div class="input-field col s6">
                    <input placeholder="ProductID" name="ProductID" id="ProductID" type="text">
                </div>
                <div class="input-field col s6">
                    <input placeholder="Date Start" name="DateStart" id="DateStart" type="text">
                </div>
                <div class="input-field col s6">
                    <input placeholder="Date End" name="DateEnd" id="DateEnd" type="text">
                </div>
            </div>
            <button class="btn waves-effect waves-light" type="submit">Save</button>
            <button class="btn waves-effect" id="clearButton">Clear</button>
        </form>
    </div>
</div>


<script>



        const bookingsData = document.querySelector('#Bookings-table tbody');
    const orderidElem = document.querySelector('#OrderID');
    const productIdElem = document.querySelector('#ProductID');
    const dateStartElem = document.querySelector('#DateStart');
    const dateEndElem = document.querySelector('#DateEnd');        
    const table = document.getElementById("Bookings-table");

        //document.getElementById("someFormId").elements;


        const onSave = evt => {
            evt.preventDefault();

            const Id = idElem.value;

            const model = {
                OrderId: orderidElem.value,
                ProductId: productIdElem.value,
                Date_Start: dateStartElem.value,
                Date_End: dateEndElem.value
            }

            let apiPath = '/api/Bookings';
            let apiMethod = 'post';
            if (!!Id) {
                model.id = parseInt(Id);
                apiPath = `/api/Bookings/${Id}`;
                apiMethod = 'put';
            }

            fetch(apiPath, {
                body: JSON.stringify(model),
                method: apiMethod,
                headers: {
                    'Content-Type': 'application/json'
                }
            }).then(res => {
                refreshList();
                clearList();
            }).catch(err => {
                alert('Submit failed');
            });
        };


    const onUpdate = evt => {
        evt.preventDefault();

        const updateBtn = evt.currentTarget;
        const Id = updateBtn.getAttribute('data-id');

        let rowchildren = document.getElementById(`rowid${Id}`).children;


        //Change this
        const model = {
            OrderId: parseInt(rowchildren[0].children[0].value),
            ProductId: parseInt(rowchildren[1].children[0].value),
            Date_Start: rowchildren[2].children[0].value,
            Date_End: rowchildren[3].children[0].value
        }


        apiPath = `api/Bookings/${Id}`;
        apiMethod = 'put';

        fetch(apiPath, {
            body: JSON.stringify(model),
            method: apiMethod,
            headers: {
                'Content-Type': 'application/json'
            }
        }).then(() => {
            refreshList();
        }).catch(err => {
            alert('Submit Put Method failed');
        });

    }


        


        //delete function
        const onDelete = evt => {
            evt.preventDefault();

            const deleteBtn = evt.currentTarget;
            const Id = deleteBtn.getAttribute('data-id');

            fetch(`/api/Bookings/${Id}`, { method: 'delete' })
                .then(() => {
                    refreshList();
                });
        }


        const refreshList = () => {
            bookingsData.innerHTML = '';

            fetch('api/Bookings')
                .then(res => res.json())
                .then(bookings => {
                    bookings.forEach(booking => {
                        const OrderidCell = document.createElement('td');
                        const ProductidCell = document.createElement('td');
                        const dStartCell = document.createElement('td');
                        const dEndCell = document.createElement('td');
                        const action1Cell = document.createElement('td');
                        const action2Cell = document.createElement('td');

                        OrderidCell.innerText = booking.orderId;
                        ProductidCell.innerText = booking.productId;
                        dStartCell.innerText = booking.date_start;
                        dEndCell.innerText = booking.date_end;

                        const deleteBtn = document.createElement('button');
                        const selectBtn = document.createElement('button');

                        deleteBtn.innerText = 'Delete';
                        deleteBtn.setAttribute('data-id', `${booking.productId}${booking.orderId}`);
                        deleteBtn.className = 'waves-effect waves-light btn';
                        deleteBtn.addEventListener('click', onDelete);
                        selectBtn.innerText = 'Select';
                        selectBtn.setAttribute('data-id', `${booking.productId}${booking.orderId}`);
                        selectBtn.className = 'waves-effect waves-light btn';
                        selectBtn.addEventListener('click', onEdit);


                        action1Cell.appendChild(deleteBtn);
                        action2Cell.appendChild(selectBtn);

                        const row = document.createElement('tr');

                        row.appendChild(OrderidCell);
                        row.appendChild(ProductidCell);
                        row.appendChild(dStartCell);
                        row.appendChild(dEndCell);
                        row.appendChild(action1Cell);
                        row.appendChild(action2Cell);
                        
                        row.setAttribute('id', `rowid${booking.productId}${booking.orderId}`);
                        bookingsData.appendChild(row);
                    });
                })
                .then(() => { })
    }

    const refreshBut = evt => {
        evt.preventDefault;
        refreshList()
    }



        const onEdit = evt => {

            evt.preventDefault();

            const selectBtn = evt.currentTarget;
            const Id = selectBtn.getAttribute('data-id');

            let rowchildren = document.getElementById(`rowid${Id}`).children;
            let temp;

            for (var i = 0; i < 4; i++) {
                temp = rowchildren[i].innerText;
                rowchildren[i].innerHTML = `<input type="text" value="${temp}" />`;
            };

            const EditBtn = document.createElement('button');
            const updateBtn = document.createElement('button');

            EditBtn.innerText = 'Cancel';
            EditBtn.className = 'waves-effect waves-light btn';
            EditBtn.addEventListener('click', refreshBut);
            updateBtn.innerText = 'Update';
            updateBtn.setAttribute('data-id', Id);
            updateBtn.className = 'waves-effect waves-light btn';
            updateBtn.addEventListener('click', onUpdate);

            rowchildren[4].innerHTML = '';
            rowchildren[4].appendChild(EditBtn);
            rowchildren[5].innerHTML = '';
            rowchildren[5].appendChild(updateBtn);


    }  

        const saveButton = document.querySelector('button[type="submit"]');
        saveButton.addEventListener('click', onSave);

        refreshList();



</script>