
@*
    For more information on enabling MVC for empty projects, visit http://go.microsoft.com/fwlink/?LinkID=397860
*@
    

    <div id="Floorspace" class="tabcontent">
        <div class="row">
            <div class="col s12">
                <h3>CoWork Floor Space</h3>
                <p>....</p>
            </div>
        </div>
        <div class="row">
            <div class="col s12">
                <h4>Floor Spaces</h4>
                <table class="striped" id="spaces-table">
                    <thead>
                        <tr>
                            <th>Space Name</th>
                            <th>Details</th>
                            <th>ImagePath</th>
                            <th></th>
                            <th></th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>

                    </tbody>
                </table>
            </div>
        </div>
        <div class="row">
            <h4>Add Spaces</h4>
            <form class="col s12">
                <input type="hidden" name="Id" id="Id" />
                <div class="row">
                    <div class="input-field col s6">
                        <input placeholder="Name" name="Name" id="Name" type="text">
                    </div>
                    <div class="input-field col s6">
                        <input placeholder="Details" name="Details" id="Details" type="text">
                    </div>
                    <div class="input-field col s6">
                        <input placeholder="Image Path" name="ImagePath" id="ImagePath" type="text">
                    </div>
                    <div class="input-field col s6">
                        <label for="isAvailable">Is Available:</label>
                        <input type="checkbox" class="isAvailable" name="isAvailable" checked /><br />
                    </div>
                </div>
                <button class="btn waves-effect waves-light" type="submit">Save</button>
                <button class="btn waves-effect" id="clearButton">Clear</button>
            </form>
        </div>
    </div>
    
    
    
    <script>

        

        const spacesData = document.querySelector('#spaces-table tbody');
        const idElem = document.querySelector('input[name="Id"]');
        const nameElem = document.querySelector('#Name');
        const detailsElem = document.querySelector('#Details');
        const imgPath = document.querySelector('#ImagePath');
        const isAvailable = document.querySelector('input[name="isAvailable"]');
        const table = document.getElementById("spaces-table");

        //document.getElementById("someFormId").elements;


        const onSave = evt => {
            evt.preventDefault();

            const Id = idElem.value;

            const model = {
                Name: nameElem.value,
                Details: detailsElem.value,
                ImagePath: imgPath.value,
                isAvailable: true
            }

            let apiPath = '/api/Products';
            let apiMethod = 'post';
            if (!!Id) {
                model.id = parseInt(Id);
                apiPath = `/api/Products/${Id}`;
                apiMethod = 'put';
            }

            fetch(apiPath, {
                body: JSON.stringify(model),
                method: apiMethod,
                headers: {
                    'Content-Type': 'application/json'
                }
            }).then(res => {
                refreshBut();
                clearList();
            }).catch(err => {
                alert('Submit failed');
            });
        };

        const onUpdate = evt => {
            evt.preventDefault();

            const updateBtn = evt.currentTarget;
            const Id = updateBtn.getAttribute('data-id');

            let rowchildren = document.getElementById(`rowid${Id}`).children;

            const model = {
                Id: parseInt(Id),
                Name: rowchildren[0].children[0].value,
                Details: rowchildren[1].children[0].value,
                ImagePath: rowchildren[2].children[0].value,
                isAvailable: true
            }
            //build model

            apiPath = `/api/Products/${Id}`;
            apiMethod = 'put';

            fetch(apiPath, {
                body: JSON.stringify(model),
                method: apiMethod,
                headers: {
                    'Content-Type': 'application/json'
                }
            }).then(res => {
                //maybe refreshBtn
                refreshList();
            }).catch(err => {
                alert('Submit Put Method failed');
            });

        }
      


        //delete function
        const onDelete = evt => {
            evt.preventDefault();

            const deleteBtn = evt.currentTarget;
            const Id = deleteBtn.getAttribute('data-id');

            fetch(`/api/Products/${Id}`, { method: 'delete' })
                .then(() => {
                    refreshBut();
                });
        }

        
        const refreshList = () => {
            spacesData.innerHTML = '';

            fetch('api/Products')
                .then(res => res.json())
                .then(products => {
                    products.forEach(product => {
                        const nameCell = document.createElement('td');
                        const detailsCell = document.createElement('td');
                        const imgCell = document.createElement('td');
                        const action1Cell = document.createElement('td');
                        const action2Cell = document.createElement('td');

                        nameCell.innerText = product.name;
                        detailsCell.innerText = product.details;
                        imgCell.innerText = product.imagePath;

                        const deleteBtn = document.createElement('button');
                        const selectBtn = document.createElement('button');

                        deleteBtn.innerText = 'Delete';
                        deleteBtn.setAttribute('data-id', product.id);
                        deleteBtn.className = 'waves-effect waves-light btn';
                        deleteBtn.addEventListener('click', onDelete);
                        selectBtn.innerText = 'Select';
                        selectBtn.setAttribute('data-id', product.id);
                        selectBtn.className = 'waves-effect waves-light btn';
                        selectBtn.addEventListener('click', onEdit);
       

                        action1Cell.appendChild(deleteBtn);
                        action2Cell.appendChild(selectBtn);

                        const row = document.createElement('tr');

                        row.appendChild(nameCell);
                        row.appendChild(detailsCell);
                        row.appendChild(imgCell);
                        row.appendChild(action1Cell);
                        row.appendChild(action2Cell);
                        row.setAttribute('id', `rowid${product.id}`);
                        spacesData.appendChild(row);
                    });
                })
                .then(() => { })
        }

        const refreshBut = evt => {
            evt.preventDefault;
            refreshList()
        }


        const onEdit = evt => {
            evt.preventDefault();

            const selectBtn = evt.currentTarget;
            const Id = selectBtn.getAttribute('data-id');

            let rowchildren = document.getElementById(`rowid${Id}`).children;
            let temp;

            for (var i = 0; i < 3; i++) {
                temp = rowchildren[i].innerText;
                rowchildren[i].innerHTML = `<input type="text" value="${temp}" />`;
            };

            const EditBtn = document.createElement('button');
            const updateBtn = document.createElement('button');

            EditBtn.innerText = 'Cancel';
            EditBtn.className = 'waves-effect waves-light btn';
            EditBtn.addEventListener('click', refreshBut);
            updateBtn.innerText = 'Update';
            updateBtn.setAttribute('data-id', Id);
            updateBtn.className = 'waves-effect waves-light btn';
            updateBtn.addEventListener('click', onUpdate);

            rowchildren[3].innerHTML = '';
            rowchildren[3].appendChild(EditBtn);
            rowchildren[4].innerHTML = '';
            rowchildren[4].appendChild(updateBtn);

            
        }

        const saveButton = document.querySelector('button[type="submit"]');
        saveButton.addEventListener('click', onSave);

        refreshList();

        

    </script>